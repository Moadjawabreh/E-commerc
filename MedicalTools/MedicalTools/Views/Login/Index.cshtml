@model MedicalTools.Models.User

@using System.Composition

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
	<head>
	<style>

		import url("https://fonts.googleapis.com/css?family=Fira+Sans");

		html, body {
			position: relative;
			min-height: 100vh;
			background-color: #E1E8EE;
			width: 200vh;
			display: flex;
			align-items: center;
			justify-content: center;
			font-family: "Fira Sans", Helvetica, Arial, sans-serif;
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;
		}

		.error-message {
			color: #ff0000; /* Red color for error messages */
			font-size: 14px;
			margin-top: 5px;
			padding-left:5px;
		}

		.form-structor {
			background-color: #222;
			border-radius: 15px;
			height: 550px;
			width: 100%;
			position: relative;
			overflow: hidden;
			&::after

		{
			content: '';
			opacity: .8;
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			background-repeat: no-repeat;
			background-position: left bottom;
			background-size: 500px;
			background-image: url('https://images.unsplash.com/photo-1503602642458-232111445657?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=bf884ad570b50659c5fa2dc2cfb20ecf&auto=format&fit=crop&w=1000&q=100');
		}

		.signup {
			position: absolute;
			top: 50%;
			left: 50%;
			-webkit-transform: translate(-50%, -50%);
			width: 30%;
			z-index: 5;
			-webkit-transition: all .3s ease;
			&.slide-up

		{
			top: 5%;
			-webkit-transform: translate(-50%, 0%);
			-webkit-transition: all .3s ease;
		}

		&.slide-up .form-holder,
		&.slide-up .submit-btn {
			opacity: 0;
			visibility: hidden;
		}

		&.slide-up .form-title {
			font-size: 1em;
			cursor: pointer;
		}

			&.slide-up .form-title span {
				margin-right: 5px;
				opacity: 1;
				visibility: visible;
				-webkit-transition: all .3s ease;
			}

		.form-title {
			color: #fff;
			font-size: 1.7em;
			text-align: center;
			span

		{
			color: rgba(0,0,0,0.4);
			opacity: 0;
			visibility: hidden;
			-webkit-transition: all .3s ease;
		}

		}

		.form-holder {
			border-radius: 15px;
			background-color: #fff;
			overflow: hidden;
			margin-top: 50px;
			opacity: 1;
			visibility: visible;
			-webkit-transition: all .3s ease;
			.input

		{
			border: 0;
			outline: none;
			box-shadow: none;
			display: block;
			height: 30px;
			line-height: 30px;
			padding: 8px 15px;
			border-bottom: 1px solid #eee;
			width: 100%;
			font-size: 12px;
			&:last-child

		{
			border-bottom: 0;
		}

		&::-webkit-input-placeholder {
			color: rgba(0,0,0,0.4);
		}

		}
		}

		.submit-btn {
			background-color: rgba(0,0,0,0.4);
			color: rgba(256,256,256,0.7);
			border: 0;
			border-radius: 15px;
			display: block;
			margin: 15px auto;
			padding: 15px 45px;
			width: 100%;
			font-size: 13px;
			font-weight: bold;
			cursor: pointer;
			opacity: 1;
			visibility: visible;
			-webkit-transition: all .3s ease;
			&:hover

		{
			transition: all .3s ease;
			background-color: rgba(0,0,0,0.8);
		}

		}
		}

		.login {
			position: absolute;
			top: 20%;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: #fff;
			z-index: 5;
			-webkit-transition: all .3s ease;
			&::before

		{
			content: '';
			position: absolute;
			left: 50%;
			top: -20px;
			-webkit-transform: translate(-50%, 0);
			background-color: #fff;
			width: 200%;
			height: 250px;
			border-radius: 50%;
			z-index: 4;
			-webkit-transition: all .3s ease;
		}

		.center {
			position: absolute;
			top: calc(50% - 10%);
			left: 50%;
			-webkit-transform: translate(-50%, -50%);
			width: 30%;
			z-index: 5;
			-webkit-transition: all .3s ease;
			.form-title

		{
			color: #000;
			font-size: 1.7em;
			text-align: center;
			span

		{
			color: rgba(0,0,0,0.4);
			opacity: 0;
			visibility: hidden;
			-webkit-transition: all .3s ease;
		}

		}

		.form-holder {
			border-radius: 15px;
			background-color: #fff;
			border: 1px solid #eee;
			overflow: hidden;
			margin-top: 50px;
			opacity: 1;
			visibility: visible;
			-webkit-transition: all .3s ease;
			.input

		{
			border: 0;
			outline: none;
			box-shadow: none;
			display: block;
			height: 30px;
			line-height: 30px;
			padding: 8px 15px;
			border-bottom: 1px solid #eee;
			width: 100%;
			font-size: 12px;
			&:last-child

		{
			border-bottom: 0;
		}

		&::-webkit-input-placeholder {
			color: rgba(0,0,0,0.4);
		}

		}
		}

		.submit-btn {
			background-color: #6B92A4;
			color: rgba(256,256,256,0.7);
			border: 0;
			border-radius: 15px;
			display: block;
			margin: 15px auto;
			padding: 15px 45px;
			width: 100%;
			font-size: 13px;
			font-weight: bold;
			cursor: pointer;
			opacity: 1;
			visibility: visible;
			-webkit-transition: all .3s ease;
			&:hover

		{
			transition: all .3s ease;
			background-color: rgba(0,0,0,0.8);
		}

		}
		}

		&.slide-up {
			top: 90%;
			-webkit-transition: all .3s ease;
		}

			&.slide-up .center {
				top: 10%;
				-webkit-transform: translate(-50%, 0%);
				-webkit-transition: all .3s ease;
			}

			&.slide-up .form-holder,
			&.slide-up .submit-btn {
				opacity: 0;
				visibility: hidden;
				-webkit-transition: all .3s ease;
			}

			&.slide-up .form-title {
				font-size: 1em;
				margin: 0;
				padding: 0;
				cursor: pointer;
				-webkit-transition: all .3s ease;
			}

				&.slide-up .form-title span {
					margin-right: 5px;
					opacity: 1;
					visibility: visible;
					-webkit-transition: all .3s ease;
				}

		}
		}
	</style>
	</head>
	<body>
		<div class="form-structor">
		<form class="signup" asp-action="Create" method="post" onsubmit="return validateForm()">
				<h2 class="form-title" id="signup"><span>or</span>Sign up</h2>
				<div class="form-holder">
					<div class="form-group">
						<input asp-for="Name" type="text" class="input" placeholder="Name" id="Name" required />
						<span id="nameError" class="error-message"></span>
					</div>
					<div class="form-group">
						<input asp-for="Email" type="email" class="input" placeholder="Email" id="Email" name="Email" required />
						<span id="emailError" class="error-message"></span>
					</div>
					<div class="form-group">
						<input asp-for="Password" type="password" class="input" placeholder="Password" id="Password" name="Password" required />
						<span id="passwordError" class="error-message"></span>
					</div>
				</div>
			<div class="text-danger">
				@Html.ValidationMessage("InvalidUser")
			</div>
				<button type="submit" class="submit-btn" id="registerButton">Sign up</button>
			</form>
			<form class="login slide-up" asp-action="Index" method="post" >
				<div class="center">
					<h2 class="form-title" id="login"><span>or</span>Log in</h2>
					<div class="form-holder">
						<div class="form-group">
							<input asp-for="Email" type="email" class="input" placeholder="Email" id="Email" name="Email" required />
							<span @* asp-validation-for="Email" *@ class="text-danger"></span>
						</div>
						<div class="form-group">
							<input asp-for="Password" type="password" class="input" placeholder="Password" id="Password" name="Password" required />
							<span @* asp-validation-for="Password" *@ class="text-danger"></span>
						</div>
					</div>
					
					<button type="submit" class="submit-btn">Log in</button>
				</div>
			</form>

		</div>

	<script>
		console.clear();

		const loginBtn = document.getElementById('login');
		const signupBtn = document.getElementById('signup');

		loginBtn.addEventListener('click', (e) => {
			let parent = e.target.parentNode.parentNode;
			Array.from(e.target.parentNode.parentNode.classList).find((element) => {
				if (element !== "slide-up") {
					parent.classList.add('slide-up')
				} else {
					signupBtn.parentNode.classList.add('slide-up')
					parent.classList.remove('slide-up')
				}
			});
		});

		signupBtn.addEventListener('click', (e) => {
			let parent = e.target.parentNode;
			Array.from(e.target.parentNode.classList).find((element) => {
				if (element !== "slide-up") {
					parent.classList.add('slide-up')
				} else {
					loginBtn.parentNode.parentNode.classList.add('slide-up')
					parent.classList.remove('slide-up')
				}
			});
		});

		
		function validateForm() {
			var name = document.getElementById("Name").value;
			var email = document.getElementById("Email").value;
			var password = document.getElementById("Password").value;

			var nameError = document.getElementById("nameError");
			var emailError = document.getElementById("emailError");
			var passwordError = document.getElementById("passwordError");

			// Reset previous errors
			nameError.innerHTML = "";
			emailError.innerHTML = "";
			passwordError.innerHTML = "";

			var isValid = true;

			// Validate Name
			if (name.trim() === "") {
				nameError.innerHTML = "Name is required";
				isValid = false;
			}

			// Validate Email
			if (!isValidEmail(email)) {
				emailError.innerHTML = "Invalid email address";
				isValid = false;
			}

			// Validate Password
			if (password.length < 8) {
				passwordError.innerHTML = "Password must be at least 8 characters long";
				isValid = false;
			} else if (!containsUpperCase(password)) {
				// // passwordError.innerHTML = "";
				passwordError.innerHTML = "Password must contain at least one uppercase letter";
				isValid = false;
			} else if (!containsLowerCase(password)) {
				// passwordError.innerHTML = "";
				passwordError.innerHTML = "Password must contain at least one lowercase letter";
				isValid = false;
			} else if (!containsDigit(password)) {
				// passwordError.innerHTML = "";
				passwordError.innerHTML = "Password must contain at least one digit";
				isValid = false;
			}

			return isValid;
		}

		function isValidEmail(email) {
			// Regular expression for a valid email address
			var emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
			return emailRegex.test(email);
		}

		function containsUpperCase(str) {
			return /[A-Z]/.test(str);
		}

		function containsLowerCase(str) {
			return /[a-z]/.test(str);
		}

		function containsDigit(str) {
			return /\d/.test(str);
		}


	</script>
	</body>
</html>





			
